{"version":3,"sources":["js/task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","resolve","reject","delay","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAiCA,aAjCA,QAAA,qBAEA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GAChB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACrBC,IAAAA,EAAQX,EAA0B,IAAK,KAC7CY,WAAW,WACUT,KAAKE,SAAW,IAEjCI,EAAQ,CAAEI,GAAIN,EAAYM,GAAIC,KAAMH,IAEtCD,EAAO,CAAEG,GAAIN,EAAYM,MACxBF,MAIDI,EAAa,SAAkB,GAAfF,IAAAA,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,KACxBE,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBC,kBAAAA,OAAAA,EAA9C,QAGII,EAAW,SAAY,GAATL,IAAAA,EAAAA,EAAAA,GAClBG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAGFP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAE/DZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","file":"task3.d82dd27f.js","sourceRoot":"../src","sourcesContent":["import \"../scss/main.scss\";\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      }\n      reject({ id: transaction.id });\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = ({ id }) => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n"]}